#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    quick-tap-ms = <300>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        mouse_btn3 {
            bindings = <&mkp MB3>;
            key-positions = <17 18>;
            layers = <5>;
        };

        mouse_btn3_2 {
            bindings = <&mkp MB3>;
            key-positions = <35 36>;
            layers = <0>;
        };

        connect_mode {
            bindings = <&mo 8>;
            key-positions = <33 34>;
            layers = <0>;
        };

        zoom_std {
            bindings = <&kp LG(NUMBER_0)>;
            key-positions = <4 14 35>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        number_with_symbols: number_with_symbols {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2 &mo 1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1 &mo 2>;

            label = "NUMBER_WITH_SYMBOLS";
        };

        shortcut_with_mouse: shortcut_with_mouse {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 4 &mo 5>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 5 &mo 4>;

            label = "SHORTCUT_WITH_MOUSE";
        };

        mission_control: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 7 &kp LC(UP)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LC(UP) &mo 7>;

            label = "NEW_MACRO";
        };

        mbt1_command: mbt1_command {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &mkp MB1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MB1 &kp LEFT_COMMAND>;

            label = "MBT1_COMMAND";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_right_left: mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        ht_rclk_mo: ht_rclk_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_RCLK_MO";
            #binding-cells = <2>;
            bindings = <&mo>, <&mkp>;

            tapping-term-ms = <170>;
            flavor = "tap-preferred";
        };

        ht_mission_control: ht_mission_control {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_MISSION_CONTROL";
            #binding-cells = <2>;
            bindings = <&mission_control>, <&kp>;

            tapping-term-ms = <170>;
            flavor = "balanced";
        };

        mkp_shortcut_mouse: mkp_shortcut_mouse {
            compatible = "zmk,behavior-hold-tap";
            label = "MKP_SHORTCUT_MOUSE";
            #binding-cells = <2>;
            bindings = <&shortcut_with_mouse>, <&mkp>;

            tapping-term-ms = <170>;
            flavor = "balanced";
        };

        kp_num_sym: kp_num_sym {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_NUM_SYM";
            #binding-cells = <2>;
            bindings = <&number_with_symbols>, <&kp>;

            tapping-term-ms = <170>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                 &kp W           &kp E                      &kp R     &kp T                                                                     &kp Y        &kp U    &kp I        &kp O    &kp P
&kp A                 &kp S           &kp D                      &kp F     &kp G                                            &kp F5                   &kp H        &kp J    &kp K        &lt 5 L  &lt 5 MINUS
&kp Z                 &kp X           &kp C                      &kp V     &kp B        &ht_mission_control 0 LANGUAGE_2    &mt LEFT_ALT LANGUAGE_1  &kp N        &lt 3 M  &lt 3 COMMA  &kp DOT  &kp SLASH
&mt LEFT_CONTROL ESC  &kp LEFT_SHIFT  &mkp_shortcut_mouse 0 MB2  &mkp MB1  &lt 1 SPACE  &kp_num_sym 0 TAB                   &kp BACKSPACE            &lt 6 ENTER                                 &lt 1 COLON
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        symbol {
            bindings = <
&kp PLUS      &kp MINUS  &kp GRAVE        &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES                                      &kp EXCLAMATION  &kp CARET      &kp TILDE   &kp PIPE       &kp BACKSLASH
&kp ASTERISK  &kp SLASH  &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS                 &kp LESS_THAN     &kp POUND        &kp AT         &kp COLON   &kp SEMICOLON  &kp UNDERSCORE
&kp EQUAL     &trans     &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp KP_DOT    &kp GREATER_THAN  &kp PERCENT      &kp AMPERSAND  &kp DOLLAR  &kp LA(Y)      &kp QUESTION
&trans        &trans     &trans           &trans             &trans                 &trans        &trans            &trans                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        number {
            bindings = <
&trans  &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9                        &trans  &trans  &trans  &trans  &trans
&trans  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans           &trans           &trans           &trans        &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        scroll_with_ball {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        shortcut {
            bindings = <
&none      &none      &kp LG(LS(N3))  &kp LG(LS(N4))  &kp LG(PLUS)                                     &none          &none  &none  &none  &none
&kp LG(A)  &kp LG(S)  &none           &kp LG(F)       &kp LG(MINUS)                 &none              &none          &none  &none  &none  &none
&kp LG(Z)  &kp LG(X)  &kp LG(C)       &kp LG(V)       &kp LG(B)      &none          &none              &none          &none  &none  &none  &none
&none      &none      &none           &mbt1_command   &kp LG(SPACE)  &kp LG(TAB)    &kp LG(BACKSPACE)  &kp LG(ENTER)                       &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        mouse {
            bindings = <
&trans  &trans     &trans     &trans     &trans                    &trans  &kp LC(UP)    &trans    &trans  &trans
&trans  &trans     &trans     &trans     &trans            &trans  &trans  &mkp MB1      &mkp MB2  &trans  &trans
&trans  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &trans    &trans  &trans  &kp LC(DOWN)  &trans    &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans                                  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        cursor {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &kp LG(UP)    &kp LG(LEFT)    &kp UP_ARROW    &kp LG(RIGHT)    &trans
&trans  &trans  &trans  &trans  &trans            &trans  &kp LG(DOWN)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans          &trans          &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        mission_control {
            bindings = <
&kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)                  &none  &none         &none  &none          &none
&kp LC(N6)  &kp LC(N7)  &kp LC(N8)  &kp LC(N9)  &kp LC(N0)           &none  &none  &kp LC(LEFT)  &none  &kp LC(RIGHT)  &none
&none       &none       &none       &none       &none       &none    &none  &none  &none         &none  &none          &none
&none       &none       &none       &none       &none       &none    &none  &none                                      &none
            >;

            sensor-bindings = <&inc_dec_kp LC(LEFT) LC(RIGHT)>;
        };

        connect {
            bindings = <
&none  &none  &none  &none  &none                        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none           &none        &out OUT_BLE  &out OUT_USB  &none         &none         &none
&none  &none  &none  &none  &none  &none    &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none    &none        &none                                                   &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
